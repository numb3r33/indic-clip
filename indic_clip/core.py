"""Basic utilities, constants, and shared functions for the Indic-CLIP project."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['PROJECT_ROOT', 'DATA_PATH', 'RAW_DATA_PATH', 'HINDI_RAW_PATH', 'SANSKRIT_RAW_PATH', 'SYNTHETIC_RAW_PATH',
           'PROCESSED_DATA_PATH', 'BENCHMARK_DATA_PATH', 'MODEL_PATH', 'CHECKPOINT_PATH', 'ONNX_PATH', 'QUANTIZED_PATH',
           'TOKENIZER_PATH', 'TOKENIZER_MODEL_FILE', 'TOKENIZER_VOCAB_FILE', 'PAD_TOKEN', 'UNK_TOKEN', 'CLS_TOKEN',
           'SEP_TOKEN', 'MASK_TOKEN', 'SANSKRIT_TOKEN', 'HINDI_TOKEN', 'SPECIAL_TOKENS', 'DEFAULT_IMAGE_SIZE',
           'DEFAULT_BATCH_SIZE', 'DEFAULT_VOCAB_SIZE', 'DEFAULT_EMBED_DIM', 'setup_logging', 'get_logger']

# %% ../nbs/00_core.ipynb 3
import os
from pathlib import Path
import logging

# %% ../nbs/00_core.ipynb 5
# --- Project Root --- 
# Assumes the script/notebook is run from the project root or 'nbs' directory
PROJECT_ROOT = Path(os.getenv("INDIC_CLIP_ROOT", default=Path.cwd()))
if PROJECT_ROOT.name == 'nbs':
    PROJECT_ROOT = PROJECT_ROOT.parent

# --- Data Paths ---
DATA_PATH = PROJECT_ROOT / 'data'
RAW_DATA_PATH = DATA_PATH / 'raw'
HINDI_RAW_PATH = RAW_DATA_PATH / 'hindi'
SANSKRIT_RAW_PATH = RAW_DATA_PATH / 'sanskrit'
SYNTHETIC_RAW_PATH = RAW_DATA_PATH / 'synthetic'
PROCESSED_DATA_PATH = DATA_PATH / 'processed'
BENCHMARK_DATA_PATH = DATA_PATH / 'benchmarks'

# --- Model Paths ---
MODEL_PATH = PROJECT_ROOT / 'models'
CHECKPOINT_PATH = MODEL_PATH / 'checkpoints'
ONNX_PATH = MODEL_PATH / 'onnx'
QUANTIZED_PATH = MODEL_PATH / 'quantized'

# --- Tokenizer Paths/Files ---
TOKENIZER_PATH = PROCESSED_DATA_PATH # Store tokenizer models/vocabs with processed data
TOKENIZER_MODEL_FILE = TOKENIZER_PATH / 'indic_tokenizer.model'
TOKENIZER_VOCAB_FILE = TOKENIZER_PATH / 'indic_tokenizer.vocab'

# --- Special Tokens ---
PAD_TOKEN = "[PAD]"
UNK_TOKEN = "[UNK]"
CLS_TOKEN = "[CLS]"
SEP_TOKEN = "[SEP]"
MASK_TOKEN = "[MASK]"
SANSKRIT_TOKEN = "<Sa>"
HINDI_TOKEN = "<Hi>"

SPECIAL_TOKENS = [PAD_TOKEN, UNK_TOKEN, CLS_TOKEN, SEP_TOKEN, MASK_TOKEN, SANSKRIT_TOKEN, HINDI_TOKEN]

# --- Default Values ---
DEFAULT_IMAGE_SIZE = 224
DEFAULT_BATCH_SIZE = 64
DEFAULT_VOCAB_SIZE = 32000 # Example, adjust after tokenizer training
DEFAULT_EMBED_DIM = 512     # Example, adjust based on chosen model architecture

# %% ../nbs/00_core.ipynb 7
def setup_logging(level=logging.INFO):
    """Configures basic logging for the project."""
    logging.basicConfig(
        level=level,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )

def get_logger(name):
    """Returns a logger instance."""
    return logging.getLogger(name)

# %% ../nbs/00_core.ipynb 8
# Example Usage (remove or comment out in final version if not needed in core export)
if __name__ == '__main__':
    setup_logging()
    logger = get_logger(__name__)
    logger.info(f"Project Root: {PROJECT_ROOT}")
    logger.info(f"Data Path: {DATA_PATH}")
    logger.info(f"Model Path: {MODEL_PATH}")
    logger.info(f"Special Tokens: {SPECIAL_TOKENS}")
