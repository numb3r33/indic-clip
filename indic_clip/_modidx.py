# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/indic-clip',
                'doc_host': 'https://numb3r33\n'
                            '\n'
                            'requirements = fastai==2.7.12 transformers timm requests beautifulsoup4 imagehash sentencepiece '
                            'gradio.github.io',
                'git_url': 'https://github.com/numb3r33\n'
                           '\n'
                           'requirements = fastai==2.7.12 transformers timm requests beautifulsoup4 imagehash sentencepiece '
                           'gradio/indic-clip',
                'lib_path': 'indic_clip'},
  'syms': { 'indic_clip.core': { 'indic_clip.core.ensure_dir': ('core.html#ensure_dir', 'indic_clip/core.py'),
                                 'indic_clip.core.get_logger': ('core.html#get_logger', 'indic_clip/core.py'),
                                 'indic_clip.core.setup_logging': ('core.html#setup_logging', 'indic_clip/core.py')},
            'indic_clip.data.collection': { 'indic_clip.data.collection.download_kaggle_dataset': ( 'data_collection.html#download_kaggle_dataset',
                                                                                                    'indic_clip/data/collection.py'),
                                            'indic_clip.data.collection.get_sanskrit_data_placeholder': ( 'data_collection.html#get_sanskrit_data_placeholder',
                                                                                                          'indic_clip/data/collection.py'),
                                            'indic_clip.data.collection.get_synthetic_data_placeholder': ( 'data_collection.html#get_synthetic_data_placeholder',
                                                                                                           'indic_clip/data/collection.py'),
                                            'indic_clip.data.collection.load_hindi_captions': ( 'data_collection.html#load_hindi_captions',
                                                                                                'indic_clip/data/collection.py'),
                                            'indic_clip.data.collection.save_formatted_data': ( 'data_collection.html#save_formatted_data',
                                                                                                'indic_clip/data/collection.py'),
                                            'indic_clip.data.collection.unzip_file': ( 'data_collection.html#unzip_file',
                                                                                       'indic_clip/data/collection.py')},
            'indic_clip.data.creation': { 'indic_clip.data.creation.CaptionGetter': ( 'data_creation.html#captiongetter',
                                                                                      'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.DataBlock.summary': ( 'data_creation.html#datablock.summary',
                                                                                          'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.DomainGetter': ( 'data_creation.html#domaingetter',
                                                                                     'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.HFTextTransform': ( 'data_creation.html#hftexttransform',
                                                                                        'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.HFTextTransform.__init__': ( 'data_creation.html#hftexttransform.__init__',
                                                                                                 'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.HFTextTransform.decodes': ( 'data_creation.html#hftexttransform.decodes',
                                                                                                'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.HFTextTransform.encodes': ( 'data_creation.html#hftexttransform.encodes',
                                                                                                'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.ImageGetter': ( 'data_creation.html#imagegetter',
                                                                                    'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.IndicCLIPDataBlock': ( 'data_creation.html#indicclipdatablock',
                                                                                           'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.IndicCLIPDataBlock.__init__': ( 'data_creation.html#indicclipdatablock.__init__',
                                                                                                    'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.IndicCLIPDataBlock.get_dataloaders': ( 'data_creation.html#indicclipdatablock.get_dataloaders',
                                                                                                           'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.LanguageGetter': ( 'data_creation.html#languagegetter',
                                                                                       'indic_clip/data/creation.py'),
                                          'indic_clip.data.creation.get_indic_clip_items': ( 'data_creation.html#get_indic_clip_items',
                                                                                             'indic_clip/data/creation.py')},
            'indic_clip.data.preprocessing': { 'indic_clip.data.preprocessing.calculate_image_hash': ( 'data_preprocessing.html#calculate_image_hash',
                                                                                                       'indic_clip/data/preprocessing.py'),
                                               'indic_clip.data.preprocessing.filter_data': ( 'data_preprocessing.html#filter_data',
                                                                                              'indic_clip/data/preprocessing.py'),
                                               'indic_clip.data.preprocessing.get_image_metadata': ( 'data_preprocessing.html#get_image_metadata',
                                                                                                     'indic_clip/data/preprocessing.py'),
                                               'indic_clip.data.preprocessing.load_raw_data': ( 'data_preprocessing.html#load_raw_data',
                                                                                                'indic_clip/data/preprocessing.py')},
            'indic_clip.data.tokenization': { 'indic_clip.data.tokenization.IndicBERTTokenizer': ( 'data_tokenization.html#indicberttokenizer',
                                                                                                   'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.__init__': ( 'data_tokenization.html#indicberttokenizer.__init__',
                                                                                                            'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer._add_custom_special_tokens': ( 'data_tokenization.html#indicberttokenizer._add_custom_special_tokens',
                                                                                                                              'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.decode': ( 'data_tokenization.html#indicberttokenizer.decode',
                                                                                                          'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.load_tokenizer': ( 'data_tokenization.html#indicberttokenizer.load_tokenizer',
                                                                                                                  'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.pad_token_id': ( 'data_tokenization.html#indicberttokenizer.pad_token_id',
                                                                                                                'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.save_tokenizer': ( 'data_tokenization.html#indicberttokenizer.save_tokenizer',
                                                                                                                  'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.special_tokens': ( 'data_tokenization.html#indicberttokenizer.special_tokens',
                                                                                                                  'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.tokenize': ( 'data_tokenization.html#indicberttokenizer.tokenize',
                                                                                                            'indic_clip/data/tokenization.py'),
                                              'indic_clip.data.tokenization.IndicBERTTokenizer.vocab_size': ( 'data_tokenization.html#indicberttokenizer.vocab_size',
                                                                                                              'indic_clip/data/tokenization.py')},
            'indic_clip.evaluation.benchmarks': { 'indic_clip.evaluation.benchmarks.create_zeroshot_dataloader': ( 'evaluation_benchmarks.html#create_zeroshot_dataloader',
                                                                                                                   'indic_clip/evaluation/benchmarks.py'),
                                                  'indic_clip.evaluation.benchmarks.load_benchmark_data': ( 'evaluation_benchmarks.html#load_benchmark_data',
                                                                                                            'indic_clip/evaluation/benchmarks.py')},
            'indic_clip.evaluation.metrics': { 'indic_clip.evaluation.metrics.calculate_retrieval_metrics': ( 'evaluation_metrics.html#calculate_retrieval_metrics',
                                                                                                              'indic_clip/evaluation/metrics.py'),
                                               'indic_clip.evaluation.metrics.calculate_zeroshot_accuracy': ( 'evaluation_metrics.html#calculate_zeroshot_accuracy',
                                                                                                              'indic_clip/evaluation/metrics.py')},
            'indic_clip.inference': { 'indic_clip.inference._get_image_transform': ( 'inference.html#_get_image_transform',
                                                                                     'indic_clip/inference.py'),
                                      'indic_clip.inference.compute_similarity': ( 'inference.html#compute_similarity',
                                                                                   'indic_clip/inference.py'),
                                      'indic_clip.inference.extract_image_features': ( 'inference.html#extract_image_features',
                                                                                       'indic_clip/inference.py'),
                                      'indic_clip.inference.extract_text_features': ( 'inference.html#extract_text_features',
                                                                                      'indic_clip/inference.py'),
                                      'indic_clip.inference.load_indic_clip_model': ( 'inference.html#load_indic_clip_model',
                                                                                      'indic_clip/inference.py')},
            'indic_clip.learner': { 'indic_clip.learner.RetrievalMetricCallback': ( 'learner.html#retrievalmetriccallback',
                                                                                    'indic_clip/learner.py'),
                                    'indic_clip.learner.RetrievalMetricCallback.__init__': ( 'learner.html#retrievalmetriccallback.__init__',
                                                                                             'indic_clip/learner.py'),
                                    'indic_clip.learner.RetrievalMetricCallback._gather_features': ( 'learner.html#retrievalmetriccallback._gather_features',
                                                                                                     'indic_clip/learner.py'),
                                    'indic_clip.learner.RetrievalMetricCallback.after_pred': ( 'learner.html#retrievalmetriccallback.after_pred',
                                                                                               'indic_clip/learner.py'),
                                    'indic_clip.learner.RetrievalMetricCallback.after_validate': ( 'learner.html#retrievalmetriccallback.after_validate',
                                                                                                   'indic_clip/learner.py'),
                                    'indic_clip.learner.RetrievalMetricCallback.before_validate': ( 'learner.html#retrievalmetriccallback.before_validate',
                                                                                                    'indic_clip/learner.py')},
            'indic_clip.loss': { 'indic_clip.loss.AllGather': ('loss.html#allgather', 'indic_clip/loss.py'),
                                 'indic_clip.loss.AllGather.backward': ('loss.html#allgather.backward', 'indic_clip/loss.py'),
                                 'indic_clip.loss.AllGather.forward': ('loss.html#allgather.forward', 'indic_clip/loss.py'),
                                 'indic_clip.loss.ContrastiveLoss': ('loss.html#contrastiveloss', 'indic_clip/loss.py'),
                                 'indic_clip.loss.ContrastiveLoss.__init__': ('loss.html#contrastiveloss.__init__', 'indic_clip/loss.py'),
                                 'indic_clip.loss.ContrastiveLoss.forward': ('loss.html#contrastiveloss.forward', 'indic_clip/loss.py')},
            'indic_clip.model.clip': { 'indic_clip.model.clip.IndicCLIP': ('model_clip.html#indicclip', 'indic_clip/model/clip.py'),
                                       'indic_clip.model.clip.IndicCLIP.__init__': ( 'model_clip.html#indicclip.__init__',
                                                                                     'indic_clip/model/clip.py'),
                                       'indic_clip.model.clip.IndicCLIP.encode_image': ( 'model_clip.html#indicclip.encode_image',
                                                                                         'indic_clip/model/clip.py'),
                                       'indic_clip.model.clip.IndicCLIP.encode_text': ( 'model_clip.html#indicclip.encode_text',
                                                                                        'indic_clip/model/clip.py'),
                                       'indic_clip.model.clip.IndicCLIP.forward': ( 'model_clip.html#indicclip.forward',
                                                                                    'indic_clip/model/clip.py'),
                                       'indic_clip.model.clip.IndicCLIP.set_gradient_checkpointing': ( 'model_clip.html#indicclip.set_gradient_checkpointing',
                                                                                                       'indic_clip/model/clip.py')},
            'indic_clip.model.text': { 'indic_clip.model.text.TextEncoder': ('model_text.html#textencoder', 'indic_clip/model/text.py'),
                                       'indic_clip.model.text.TextEncoder.__init__': ( 'model_text.html#textencoder.__init__',
                                                                                       'indic_clip/model/text.py'),
                                       'indic_clip.model.text.TextEncoder.forward': ( 'model_text.html#textencoder.forward',
                                                                                      'indic_clip/model/text.py'),
                                       'indic_clip.model.text.TextEncoder.set_gradient_checkpointing': ( 'model_text.html#textencoder.set_gradient_checkpointing',
                                                                                                         'indic_clip/model/text.py')},
            'indic_clip.model.vision': { 'indic_clip.model.vision.VisionEncoder': ( 'model_vision.html#visionencoder',
                                                                                    'indic_clip/model/vision.py'),
                                         'indic_clip.model.vision.VisionEncoder.__init__': ( 'model_vision.html#visionencoder.__init__',
                                                                                             'indic_clip/model/vision.py'),
                                         'indic_clip.model.vision.VisionEncoder.forward': ( 'model_vision.html#visionencoder.forward',
                                                                                            'indic_clip/model/vision.py'),
                                         'indic_clip.model.vision.VisionEncoder.set_gradient_checkpointing': ( 'model_vision.html#visionencoder.set_gradient_checkpointing',
                                                                                                               'indic_clip/model/vision.py')},
            'indic_clip.training.script': { 'indic_clip.training.script.main': ('training.html#main', 'indic_clip/training/script.py'),
                                            'indic_clip.training.script.parse_args': ( 'training.html#parse_args',
                                                                                       'indic_clip/training/script.py')}}}
